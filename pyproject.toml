[tool.poetry]
name = "discovery_generative_ai"
version = "0.1.0"
description = "We are exploring the potential impact of Generative AI on Nesta's Missions and work to uncover opportunities and risks that can inform Nesta strategy."
authors = ["Nesta"]
readme = "README.md"
homepage = "https://github.com/nestauk/discovery_generative_ai"
repository = "https://github.com/nestauk/discovery_generative_ai"
keywords = ['llm', 'generative-ai']
packages = [
    { include = "genai", from = "src" },
]

[tool.poetry.build]
generate-setup-file = false

[tool.poetry.dependencies]
python = "3.9.17"
requests = "2.28.1"
openai = "0.28.0"  # Updated to match your installed version
streamlit = "^1.24.1"
python-dotenv = "^1.0.0"
streamlit-option-menu = "^0.3.6"
tiktoken = "^0.4.0"
tenacity = "^8.2.2"
beautifulsoup4 = "^4.12.2"
Flask = "^2.3.2"
twilio = "^8.5.0"
aiofiles = "23.1.0"
gunicorn = "^21.2.0"
pinecone-client = "^2.2.4"  # Updated to a compatible version
streamlit-feedback = "0.0.9"
boto3 = "1.28.17"
s3fs = "^2023.9.0"
seaborn = "^0.13.0"
cchardet = "^2.1.7"
chardet = "^5.2.0"
# Recipe assistant dependencies with compatible versions
google-cloud-aiplatform = "1.38.1"
google-cloud-storage = "2.13.0"
google-generativeai = "0.3.2"
langchain = "0.0.350"
chromadb = "0.3.29"  # Using an older but stable version
pandas = "2.1.0"
Pillow = "10.0.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.1.1"
pytest-cov = "^4.0.0"
moto = "^3.1.6"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
flake8 = "^4.0.1"
pyproject-flake8 = "^0.0.1-alpha.4"
flake8-bugbear = "^22.3.23"
flake8-print = "^4.0.0"
flake8-docstrings = "^1.6.0"
flake8-annotations = "^2.8.0"
isort = "^5.10.1"
yamllint = "^1.26.3"
bandit = {version = "^1.7.4", extras = ["toml"]}
pre-commit = "^2.18.1"
black = "^22.6.0"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.24.0"

[build-system]
requires = ["poetry-core>=1.2.0rc1"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | \.env
  | \.vscode
  | build
  | dist
  | \.mypy_cache
)\
'''

[tool.isort]
profile = 'black'
force_single_line = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ["src", "tests"]
line_length = 119

[tool.flake8]
max-line-length = 119
select = [
  "C",
  "E",
  "W",
  "F",
  "N",
  "B",
  "ANN",
  "T",
  "D",
  "B950",
]
ignore = [
  "E501",
  "D107",
  "D202",
  "D400",
  "D100",
  "D104",
  "ANN003",
  "ANN002",
  "ANN1",
  "W503",
  "E203",
]
per-file-ignores = [
  "*/__init__.py:F401",
  "tests/*:ANN,D",
]
exclude = [
    ".venv/*",
    ".vscode/*",
]

[tool.bandit]
skips = [
  "B101",
  "B104",
]
exclude_dirs = [
  ".venv",
]

[tool.pytest.ini_options]
minversion = "7.1"
addopts = """
  --verbose
  --color=yes
  --assert=plain
  --cov-report term
  --cov=src
  --last-failed
"""
testpaths = [
    "tests",
]

[tool.coverage.run]
omit = ["*/tests/*"]

[tool.coverage.report]
omit = ["*/tests/*"]
