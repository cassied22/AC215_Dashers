version: '3.8'

networks:
    recipe-rag-network:
        external: true

services:
    recipe-rag-cli:
        build:
            context: ../../src/datapipeline
            dockerfile: Dockerfile
        container_name: recipe-rag-cli
        user: "1000:1000"
        volumes:
            - ../../src/secrets:/secrets:ro
            - ../../src/datapipeline:/app
            - ../datapipeline:/app/tests
        environment:
            GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
            GCP_PROJECT: ${GCP_PROJECT}
            GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
            PIPENV_DONT_LOAD_ENV: 1
            PIPENV_VENV_IN_PROJECT: 0 
            PIPENV_VIRTUALENV: /tmp/venv
        networks:
            - recipe-rag-network
        entrypoint: []
        command: >
            /bin/bash -c "
            mkdir -p /tmp/venv &&
            pipenv install --dev &&
            pipenv install pytest-cov &&
            pipenv run pytest --cov=./ --cov-config=.coveragerc -v
            "

    chromadb:
        image: chromadb/chroma:latest
        container_name: recipe-rag-chromadb
        ports:
            - 8000:8000
        volumes:
            - ../../src/datapipeline/docker-volumes/chromadb:/chroma/chroma
        environment:
            - IS_PERSISTENT=TRUE
            - ANONYMIZED_TELEMETRY=FALSE
            - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
        networks:
            - recipe-rag-network

    food-detection:
        build:
            context: ../../src/food-detection
            dockerfile: Dockerfile
        container_name: food-detection
        user: "1000:1000"
        volumes:
            - ../../src/food-detection:/app
            - ../food-detection:/app/tests
        environment:
            PIPENV_DONT_LOAD_ENV: 1
            PIPENV_VENV_IN_PROJECT: 0
            PIPENV_VIRTUALENV: /tmp/venv-food 
        networks:
            - recipe-rag-network
        entrypoint: []
        command: >
            /bin/bash -c "
            mkdir -p /tmp/venv-food &&
            pipenv install --dev &&
            pipenv install pytest-cov &&
            pipenv run pytest --cov=./ --cov-config=.coveragerc -v
            "
