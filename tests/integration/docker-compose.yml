version: '3.8'

networks:
    recipe-rag-network:
        external: true

services:
    recipe-rag-cli:
        build:
            context: ../../src/datapipeline
            dockerfile: Dockerfile
        container_name: recipe-rag-cli
        volumes:
            - ../../src/secrets:/secrets:ro
            - ../../src/datapipeline:/app
            - ../datapipeline:/app/tests
        environment:
            GOOGLE_APPLICATION_CREDENTIALS: /secrets/llm-service-account-cassie.json
            GCP_PROJECT: ${GCP_PROJECT}
            GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
            PYTHONPATH: /app
        networks:
            - recipe-rag-network
        entrypoint: ["/bin/bash", "-c"]
        command: |
            pip install -r requirements.txt && \
            pip install pytest pytest-cov && \
            python -m pytest --cov=./ --cov-config=.coveragerc -v

    chromadb:
        image: chromadb/chroma:latest
        container_name: recipe-rag-chromadb
        ports:
            - 8000:8000
        volumes:
            - ../../src/datapipeline/docker-volumes/chromadb:/chroma/chroma
        environment:
            - IS_PERSISTENT=TRUE
            - ANONYMIZED_TELEMETRY=FALSE
            - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
        networks:
            - recipe-rag-network

    food-detection:
        build:
            context: ../../src/food-detection
            dockerfile: Dockerfile
        container_name: food-detection
        volumes:
            - ../../src/food-detection:/app
            - ../food-detection:/app/tests
        environment:
            PYTHONPATH: /app
        networks:
            - recipe-rag-network
        entrypoint: ["/bin/bash", "-c"]
        command: |
            pip install -r requirements.txt && \
            pip install pytest pytest-cov && \
            python -m pytest --cov=./ --cov-config=.coveragerc -v