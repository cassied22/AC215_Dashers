name: CI/CD Pipeline
run-name: ${{ github.actor }} submitted a CI CD Action

on:
  push:
    branches: 
      - 'hanna/ci'
  pull_request:
    branches: 
      - 'hanna/ci'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
    
    - id: 'auth'
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
    
    - name: Configure Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    
    - name: Create Docker Network
      run: docker network create recipe-rag-network || true
      
    # Updated permission fix step
    - name: Setup directories and permissions
      run: |
        # First create all directories with sudo
        sudo mkdir -p src/datapipeline/docker-volumes/chromadb
        
        # Then set permissions for the entire workspace
        sudo chown -R $USER:$USER .
        sudo chmod -R 755 .
        
        # Give extra permissions to specific directories that need write access
        sudo chmod -R 777 src/datapipeline/docker-volumes
        
    - name: Run Tests
      run: |
        cd tests/integration
        docker-compose build --no-cache
        docker-compose up --abort-on-container-exit --exit-code-from recipe-rag-cli
      env:
        GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
        
    - name: Print Docker logs on failure
      if: failure()
      run: |
        cd tests/integration
        docker-compose logs
        
    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        files: ./src/datapipeline/coverage.xml,./src/food-detection/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Clean up
      if: always()
      run: |
        cd tests/integration
        docker-compose down -v
        docker network rm recipe-rag-network || true